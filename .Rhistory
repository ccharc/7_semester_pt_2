adf = adf.test(y)
tstat = c()
adf = adf.test(y)
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = c(adf$statistic)
}
tstat[j] = c(tstat, i)
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat[j] = c(tstat, i)
}
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat[j] = c(tstat, j)
}
adf = adf.test(y[j])
tstat[j] = c(tstat, j)
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y[j])
tstat[j] = c(tstat, j)
}
print(adf$statistic)
tstat = print(adf$statistic)
tstat[j] = c(tstat, j)
tstat = print(adf$statistic)
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
}
tstat
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat[j] = c(tstat,j)
}
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat[j] = c(tstat)
}
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat1 = print(adf$statistic)
tstat = c(tstat,tstat1)
}
tstat1 = print(adf$statistic)[j]
tstat = c(tstat,tstat1)
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat1 = print(adf$statistic)[j]
tstat = c(tstat,tstat1)
}
adf = adf.test(y)[j]
tstat1 = print(adf$statistic)
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat1 = print(adf$statistic)
tstat[j] = c(tstat,tstat1)
}
T = 100 #Observationer
N = 500 #Gentagelser
tstat = c()
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat1 = print(adf$statistic)
tstat[j] = c(tstat,tstat1)
}
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
adf[j] = adf.test(y)
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
for(j in 1:N+50){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
tstat1
for(j in 1:N){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
tstat1
N = 550 #Gentagelser
tstat = c()
for(j in 1:N){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
tstat1
adf_tstat = tstat1[50:550]
plot(density(adf_tstat))
N = 10000 #Gentagelser
tstat = c()
for(j in 1:N){
y = numeric(T)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
adf_tstat = tstat1[50:10000]
plot(density(adf_tstat))
adf_tstat = tstat1[51:10000]
plot(density(adf_tstat))
yt=c()
for(j in 1:N){
y = numeric(T)
y[1] = rnorm(1)
a = 1
yt=c()
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T]
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
adf_tstat = tstat1[51:10000]
y = numeric(T+50)
y[1] = rnorm(1)
a = 1
yt=c()
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T]
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
for(j in 1:N){
y = numeric(T+50)
y[1] = rnorm(1)
a = 1
yt=c()
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T]
}
adf = adf.test(y)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
for(j in 1:N){
y = numeric(T+50)
y[1] = rnorm(1)
a = 1
yt=c()
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
N = 5000 #Gentagelser
yt=c()
for(j in 1:N){
y = numeric(T+50)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
y[1] = 0
for(j in 1:N){
y = numeric(T+50)
y[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + u[1]
yt = y[51:T+50]
}
u[1] = rnorm(1)
u=c()
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
u[1] = rnorm(1)
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + u[1]
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
u[i] = rnorm(i)
y[i] <- a * y[i - 1] + u[1]
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
for(i in 2:length(y)){
u[i] = rnorm(i)
y[i] <- a * y[i - 1] + u[1]
yt = y[51:T+50]
}
T = 100 #Observationer
N = 5000 #Gentagelser
tstat = c()
yt=c()
u=c()
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
u[i] = rnorm(i)
y[i] <- a * y[i - 1] + u[1]
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
u[i] = rnorm(i)
y[i] <- a * y[i - 1] + u[1]
yt = y[51:T+50]
}
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
tstat1 = c()
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:T+50]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:150]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
N = 10000 #Gentagelser
T = 100 #Observationer
N = 10000 #Gentagelser
tstat = c()
yt=c()
u=c()
tstat1 = c()
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:150]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
arima(yt)
ar = arima(yt)
adf = adf.test(ar)
View(ar)
?adf.test
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:150]
}
adf = adf.test(yt)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
?adf.test
adf = adf.test(yt, k =1)
tstat = print(adf$statistic)
tstat1[j] = tstat
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:150]
}
adf = adf.test(yt, k =1)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
adf = adf.test(yt, k =0)
tstat = print(adf$statistic)
tstat1[j] = tstat
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:150]
}
adf = adf.test(yt, k =0)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
plot(density(tstat1))
skewness(tstat)
install.packages ("moments")
library (moments)
skewness(tstat)
density(tstat1)
adf_dens = density(tstat1)
skewness(adf_dens)
T = 100 #Observationer
N = 10000 #Gentagelser
tstat = c()
yt=c()
tstat1 = c()
for(j in 1:N){
y = numeric(T+50)
y[1] = 0
a = 1
for(i in 2:length(y)){
y[i] <- a * y[i - 1] + rnorm(1)
yt = y[51:150]
}
adf = adf.test(yt, k =0)
tstat = print(adf$statistic)
tstat1[j] = tstat
}
adf_dens = density(tstat1)
skewness(adf_dens)
plot(adf_dens)
?density
print(adf_dens)
adf_dens = density(tstat1)
summary(adf_dens)
skew = skewness(adf_dens)
install.packages("tidyverse")
library(tidyverse)
summarise(adf_dens)
mean(adf_dens)
adf_dens
adf_dens$mean
adf_dens$x$mean
setwd("~/Desktop/MAT_Ã˜K/7. semester pt. 2/Projekt/7_semester_pt_2")
