for (i in 1: length(rw_vec)){
rw_vec =c(r2 - r1_vec[j])
rw = rw_vec[i]
r2 = min(r1 + rw,240)
if (r1 != r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1: length(r2_vec)){
r2 = r2_vec[i]
rw = r2-r1
if (r1 != r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
rw_vec = c()
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1: length(r2_vec)){
r2 = r2_vec[i]
rw = r2-r1
if (r1 != r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
r2_vec = c(30, 60, 90, 120, 150, 180, 210, 240)
rw_vec = c()
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1: length(r2_vec)){
r2 = r2_vec[i]
rw = r2-r1
if (r1 != r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 != r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
rw_vec = c()
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 != r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
rw_vec = c()
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
print(gsint[1])
vec = c(vec,gsint[1])
}
}
}
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
print(gsint)
vec = c(vec,gsint)
}
}
}
ts_amzn
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint, k=1)
}
}
}
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint, k=1)
statgsadf = gsadf$statistic
vec = c(vec, gsadf)
}
}
}
vec
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint, k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
}
}
}
vec
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
}
}
}
vec
vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
}
}
}
vec
gsadf_sup = max(vec)
gsadf_sup = max(vec)
gsadf_sup
where_sup = which.max(gsadf_sup)
where_sup
where_sup = which.max(vec)
where_sup
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
gsint_vec = c(gsint_vec,gsint)
}
}
}
gsint_vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
gsint_vec = c(gsint_vec,gsint)
}
}
}
gsadf_sup = max(vec)
where_sup = which.max(vec)
gsint_vec
gsint_vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
gsint_vec = c(gsint_vec, gsint[1])
}
}
}
gsint_vec
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
gsint_vec= gsint[1]
}
}
}
gsint_vec
vec = c()
gsint_vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = adf.test(gsint,alternative = "explosive", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
}
}
}
?radf
vec = c()
gsint_vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
}
}
}
gsadf_sup = max(vec)
vec
radf(gsint, lag=1)
vec = c()
gsint_vec = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
gsadf_sup = max(vec)
where_sup = which.max(vec)
gsadf_sup
where_sup = which.max(vec)
where_sup
where_sup = which.max(vec)
where_sup
gsadf
vec
gsint
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
vec1 = c(vec1, gsint[1])
}
}
}
vec1
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
print(gsint)
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint)
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
gsint1[,7]
gsadf_sup = max(vec)
where_sup = which.max(vec)
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint)
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
vec
plot(ts_amzn[1:210])
plot(ts_amzn[1:210], type = "l")
r1_vec = c(1, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225)
r2_vec = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225, 240)
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
#gsint1 = print(gsint)
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
vec
gsadf_sup = max(vec)
where_sup = which.max(vec)
gsadf_sup
where_sup
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint)
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint[1])
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
r1_vec = c(1, 30, 60, 90, 120, 150, 180, 210)
r2_vec = c(30, 60, 90, 120, 150, 180, 210,240)
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint[1])
gsadf = radf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
vec
gsadf_sup = max(vec)
where_sup = which.max(vec)
min(vec)
which.min(vec)
max(vec)
which.max(vec)
r1_vec = c(1, 30, 60, 90, 120, 150, 180, 210)
r2_vec = c(30, 60, 90, 120, 150, 180, 210,240)
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint[1])
gsadf = rtadf(gsint, lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
adf.test(ts_amzn[1:210])
adf.test(ts_amzn[1:210], k=1)
adf.test(ts_amzn[170:200], k=1)
adf.test(ts_amzn[1:210], k=1)
?adf.test
adf.test(ts_amzn[1:210], alternative = "e", k=1)
r1_vec = c(1, 30, 60, 90, 120, 150, 180, 210)
r2_vec = c(30, 60, 90, 120, 150, 180, 210,240)
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint[1])
gsadf = adf.test(gsint,alternative= "e", lag=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
r1_vec = c(1, 30, 60, 90, 120, 150, 180, 210)
r2_vec = c(30, 60, 90, 120, 150, 180, 210,240)
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint[1])
gsadf = adf.test(gsint,alternative= "e", k=1)
statgsadf = gsadf$adf
vec = c(vec, statgsadf)
}
}
}
vec
max(vec)
r1_vec = c(1, 30, 60, 90, 120, 150, 180, 210)
r2_vec = c(30, 60, 90, 120, 150, 180, 210,240)
vec = c()
gsint_vec = c()
vec1 = c()
for (j in 1:length(r1_vec)){
r1 = r1_vec[j]
for (i in 1:length(r2_vec)){
r2 = r2_vec[i]
if (r1 <r2){
gsint = ts_amzn[r1:r2]
gsint1 = print(gsint[1])
gsadf = adf.test(gsint,alternative= "e", k=1)
statgsadf = gsadf$statistic
vec = c(vec, statgsadf)
}
}
}
vec
max(vec)
which.max(vec)
